// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc319.SteamworksBob319.subsystems;

import org.usfirst.frc319.SteamworksBob319.Robot;
import org.usfirst.frc319.SteamworksBob319.RobotMap;
import org.usfirst.frc319.SteamworksBob319.commands.*;
import org.usfirst.frc319.SteamworksBob319.commands.DriveTrain.JoystickDrive;

import com.ctre.CANTalon;
import com.ctre.CANTalon.FeedbackDevice;
import com.ctre.CANTalon.TalonControlMode;

import edu.wpi.first.wpilibj.DoubleSolenoid;
import edu.wpi.first.wpilibj.RobotDrive;

import edu.wpi.first.wpilibj.command.Subsystem;


/**
 *
 */
public class driveTrain extends Subsystem {

    
    private final CANTalon leftDriveLead = RobotMap.driveTrainLeftDriveLead;
    private final CANTalon rightDriveLead = RobotMap.driveTrainRightDriveLead;
    private final DoubleSolenoid shifter = RobotMap.driveTrainShifter;
    private final CANTalon leftDriveFollow = RobotMap.driveTrainLeftDriveFollow;
    private final CANTalon rightDriveFollow = RobotMap.driveTrainRightDriveFollow;
    private final RobotDrive joystickDrive = RobotMap.driveTrainJoystickDrive;

   public driveTrain (){
	   
	   rightDriveLead.changeControlMode(TalonControlMode.PercentVbus);
	   rightDriveFollow.changeControlMode(TalonControlMode.Follower);
	   rightDriveFollow.set(rightDriveLead.getDeviceID());
	   rightDriveLead.reverseOutput(false);
	   rightDriveLead.reverseSensor(false);
	   rightDriveLead.setFeedbackDevice(FeedbackDevice.QuadEncoder);
	   rightDriveLead.configEncoderCodesPerRev(1024);
	   
	   leftDriveLead.changeControlMode(TalonControlMode.PercentVbus);
	   leftDriveFollow.changeControlMode(TalonControlMode.Follower);
	   leftDriveFollow.set(leftDriveLead.getDeviceID());
	   leftDriveLead.reverseOutput(true);
	   leftDriveLead.reverseSensor(true);
	   leftDriveLead.setFeedbackDevice(FeedbackDevice.QuadEncoder);
	   leftDriveLead.configEncoderCodesPerRev(1024);
   }
    

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
      

        setDefaultCommand(new JoystickDrive());


        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    
    }
    
    public void joystickDrive(double moveValue, double rotateValue){
    	joystickDrive.arcadeDrive(moveValue, rotateValue, true);
    }
}

