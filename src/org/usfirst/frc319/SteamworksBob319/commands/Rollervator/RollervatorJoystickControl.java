
// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package org.usfirst.frc319.SteamworksBob319.commands.Rollervator;

import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc319.SteamworksBob319.Robot;

import com.ctre.CANTalon.TalonControlMode;

/**
 *
 */
public class RollervatorJoystickControl extends Command {

	double maxRpm = 850.0;
	double deadband = 0.1;
	double power = 0.0;
	double input = 0.0;

	public RollervatorJoystickControl() {

		requires(Robot.rollervator);

	}

	// Called just before this Command runs the first time
	protected void initialize() {
		Robot.rollervator.changeModeToSpeed();
	}

	// Called repeatedly when this Command is scheduled to run
	protected void execute() {
		input = Robot.oi.operatorController.getLeftStickY();

		if (Math.abs(input) >= deadband) {
			double power = input * maxRpm;
			Robot.rollervator.rollervatorClimb(power);

			//System.out.println("setpoint = " + power);
		}

	}

	// Make this return true when this Command no longer needs to run execute()
	protected boolean isFinished() {
		// return Robot.rollervator.rollervatorHasExceededCurrentThreshhold(14);
		return false;
	}

	// Called once after isFinished returns true
	protected void end() {
		Robot.rollervator.changeModeToSpeed();
	}

	// Called when another command which requires one or more of the same
	// subsystems is scheduled to run
	protected void interrupted() {
	}
}
